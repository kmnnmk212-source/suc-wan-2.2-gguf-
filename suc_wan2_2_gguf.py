# -*- coding: utf-8 -*-
"""suc_wan2.2_gguf.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AfnxOmJaF9DOLknkC-knmtqKLCjFGTf3
"""



# Commented out IPython magic to ensure Python compatibility.
#@title (1) Install ComfyUI + dependencies
!nvidia-smi

# System deps
!apt -y update
!apt -y install -qq aria2 git wget

# Clone ComfyUI
# %cd /content
!git clone https://github.com/comfyanonymous/ComfyUI.git

# Install ComfyUI requirements
# %cd /content/ComfyUI
!pip install -q torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
!pip install -q -r requirements.txt

# Install ComfyUI-GGUF (for loading GGUF models)
# %cd /content/ComfyUI/custom_nodes
!git clone https://github.com/city96/ComfyUI-GGUF.git

# Optional: Wan helper nodes (quality-of-life)
!git clone https://github.com/Kijai/ComfyUI-WanVideoWrapper.git

# Create model folders
# %cd /content/ComfyUI
!mkdir -p models/unet models/vae models/text_encoders models/clip_vision models/diffusion_models

VAE_URL="https://huggingface.co/QuantStack/Wan2.2-S2V-14B-GGUF/resolve/main/VAE/wan_2.1_vae.safetensors?download=true"
VAE_OUT="/content/ComfyUI/models/vae/wan_2.1_vae.safetensors"

# Commented out IPython magic to ensure Python compatibility.
#@title (2) Download Wan 2.2 GGUF + VAE + text encoder
# %cd /content/ComfyUI

# GGUF: اخترنا S2V 14B Q4_K_M كافتراضي (يمكن تغييره لاحقًا)
GGUF_URL="https://huggingface.co/QuantStack/Wan2.2-S2V-14B-GGUF/resolve/main/Wan2.2-S2V-14B-Q2_K.gguf?download=true"
GGUF_OUT="/content/ComfyUI/models/unet/Wan2.2-S2V-14B-Q2_K.gguf"

# VAE لنسخة 14B (Wan 2.1 VAE)
VAE_URL="https://huggingface.co/QuantStack/Wan2.2-S2V-14B-GGUF/resolve/main/VAE/wan_2.1_vae.safetensors?download=true"
VAE_OUT="/content/ComfyUI/models/vae/wan_2.1_vae.safetensors"

# Text Encoder: umt5-xxl (safetensors مُعاد التغليف لـ ComfyUI)
UMT5_URL="https://huggingface.co/Comfy-Org/Wan_2.2_ComfyUI_Repackaged/resolve/main/split_files/text_encoders/umt5_xxl_fp8_e4m3fn_scaled.safetensors?download=true"
UMT5_OUT="/content/ComfyUI/models/text_encoders/umt5_xxl_fp8_e4m3fn_scaled.safetensors"

# Download files
!aria2c -q -x 16 -s 16 -o "{GGUF_OUT.split('/')[-1]}" "{GGUF_URL}" -d "/content/ComfyUI/models/unet"
!aria2c -q -x 16 -s 16 -o "{VAE_OUT.split('/')[-1]}" "{VAE_URL}" -d "/content/ComfyUI/models/vae"
!aria2c -q -x 16 -s 16 -o "{UMT5_OUT.split('/')[-1]}" "{UMT5_URL}" -d "/content/ComfyUI/models/text_encoders"

# Show files
!echo "== UNET (GGUF) ==" && ls -lh /content/ComfyUI/models/unet
!echo "== VAE ==" && ls -lh /content/ComfyUI/models/vae
!echo "== TEXT ENCODERS ==" && ls -lh /content/ComfyUI/models/text_encoders

# Commented out IPython magic to ensure Python compatibility.
#@title (3) Download a ready GGUF workflow (JSON)
# %cd /content/ComfyUI
!mkdir -p /content/ComfyUI/workflows

# ورِكفلو S2V GGUF من QuantStack
!wget -q -O "/content/ComfyUI/workflows/QuantStack_Wan2.2_S2V_GGUF.json" \
  "https://huggingface.co/QuantStack/Wan2.2-S2V-14B-GGUF/resolve/main/workflow/QuantStack%20-%20Wan2.2%20S2V%20(GGUF).json?download=true"

!ls -lh /content/ComfyUI/workflows

#@title (4) Launch ComfyUI + public URL
import os, subprocess, sys, time, threading

# Download cloudflared for tunneling
!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
!chmod +x /content/cloudflared

# Start ComfyUI
def run_comfy():
    cmd = ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    p = subprocess.Popen(cmd, cwd="/content/ComfyUI", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    for line in p.stdout:
        sys.stdout.write(line)

threading.Thread(target=run_comfy, daemon=True).start()
time.sleep(5)

# Create public URL
public_url = subprocess.check_output(["/content/cloudflared", "tunnel", "--url", "http://127.0.0.1:8188"], text=True)
print("\n====== Public URL ======\n")
print(public_url)
print("\nOpen the URL above to access ComfyUI.\n")

!pip install ftfy gguf

# تثبيت cloudflared
!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
!chmod +x /content/cloudflared

# تشغيل ComfyUI في الخلفية
import subprocess, threading, time, sys

def run_comfy():
    cmd = ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    p = subprocess.Popen(cmd, cwd="/content/ComfyUI", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    for line in p.stdout:
        sys.stdout.write(line)

threading.Thread(target=run_comfy, daemon=True).start()
time.sleep(5)

# إنشاء رابط عام
public_url = subprocess.check_output(["/content/cloudflared", "tunnel", "--url", "http://127.0.0.1:8188"], text=True)
print(public_url)

# تثبيت cloudflared
!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
!chmod +x /content/cloudflared

# تشغيل ComfyUI في الخلفية
import subprocess, threading, time, sys

def run_comfy():
    cmd = ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    p = subprocess.Popen(cmd, cwd="/content/ComfyUI", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    for line in p.stdout:
        sys.stdout.write(line)

threading.Thread(target=run_comfy, daemon=True).start()
time.sleep(5)

# إنشاء رابط عام
public_url = subprocess.check_output(
    ["/content/cloudflared", "tunnel", "--url", "http://127.0.0.1:8188"],
    text=True
)
print("\n====== رابط ComfyUI العام ======\n")
print(public_url)

# تثبيت cloudflared
!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
!chmod +x /content/cloudflared

# إنشاء رابط عام للمنفذ 8188
!./cloudflared tunnel --url http://127.0.0.1:8188 --no-autoupdate

!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
!chmod +x /content/cloudflared

import subprocess, threading, time, sys

def run_comfy():
    cmd = ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    p = subprocess.Popen(cmd, cwd="/content/ComfyUI", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    for line in p.stdout:
        sys.stdout.write(line)

threading.Thread(target=run_comfy, daemon=True).start()
time.sleep(5)

!/content/cloudflared tunnel --url http://127.0.0.1:8188 --no-autoupdate

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ComfyUI/custom_nodes
!git clone https://github.com/ltdrdata/ComfyUI-Image-Resize.git

!git clone https://github.com/pythongosssss/ComfyUI-Custom-Scripts.git





import subprocess, threading, time, sys

def run_comfy():
    cmd = ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    p = subprocess.Popen(cmd, cwd="/content/ComfyUI", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    for line in p.stdout:
        sys.stdout.write(line)

threading.Thread(target=run_comfy, daemon=True).start()
time.sleep(5)

!/content/cloudflared tunnel --url http://127.0.0.1:8188 --no-autoupdate

import subprocess, threading, time, sys

def run_comfy():
    cmd = ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    p = subprocess.Popen(cmd, cwd="/content/ComfyUI", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    for line in p.stdout:
        sys.stdout.write(line)

threading.Thread(target=run_comfy, daemon=True).start()
time.sleep(5)

# تحميل cloudflared
!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
!chmod +x /content/cloudflared

# تشغيل النفق
!/content/cloudflared tunnel --url http://127.0.0.1:8188 --no-autoupdate

import subprocess, threading, time, sys

def run_comfy():
    cmd = ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    p = subprocess.Popen(cmd, cwd="/content/ComfyUI", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    for line in p.stdout:
        sys.stdout.write(line)

threading.Thread(target=run_comfy, daemon=True).start()
time.sleep(5)

!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
!chmod +x /content/cloudflared
!/content/cloudflared tunnel --url http://127.0.0.1:8188 --no-autoupdate

import subprocess, threading, time, sys

def run_comfy():
    cmd = ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    p = subprocess.Popen(cmd, cwd="/content/ComfyUI", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    for line in p.stdout:
        sys.stdout.write(line)

threading.Thread(target=run_comfy, daemon=True).start()
time.sleep(8)  # ندي وقت كافي لبدء السيرفر

!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
!chmod +x /content/cloudflared

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ComfyUI

!/content/cloudflared tunnel --url http://127.0.0.1:8188 --no-autoupdate

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ComfyUI/models/vae
!wget https://huggingface.co/alliestar/wan22-comfyui-complete/resolve/main/vae/wan_2.1_vae.safetensors

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ComfyUI/custom_nodes

!git clone https://github.com/palant/image-resize-comfyui

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ComfyUI/models/audio_encoders

!wget https://huggingface.co/Wan-AI/Wan2.2-S2V-14B/resolve/main/wav2vec2-large-xlsr-53-english/model.safetensors







# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ComfyUI

import subprocess, threading, time, sys

def run_comfy():
    cmd = ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    p = subprocess.Popen(cmd, cwd="/content/ComfyUI", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    for line in p.stdout:
        sys.stdout.write(line)

threading.Thread(target=run_comfy, daemon=True).start()
time.sleep(8)  # ندي وقت كافي لبدء السيرفر

!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
!chmod +x /content/cloudflared

!/content/cloudflared tunnel --url http://127.0.0.1:8188 --no-autoupdate

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ComfyUI/models/clip
!aria2c -x 16 -s 16 -o "clip-vit-l14-q4_k_m.gguf" \
"https://huggingface.co/city96/clip-vit-l14-gguf/resolve/main/clip-vit-l14-q4_k_m.gguf?download=true"

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ComfyUI/models/clip
!wget https://openaipublic.azureedge.net/clip/models/3035c92b350959924f9f00213499208652fc7ea050643e8b385c2dac08641f02/ViT-L-14-336px.pt











# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ComfyUI

import subprocess, threading, time, sys

def run_comfy():
    cmd = ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    p = subprocess.Popen(cmd, cwd="/content/ComfyUI", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    for line in p.stdout:
        sys.stdout.write(line)

threading.Thread(target=run_comfy, daemon=True).start()
time.sleep(8)  # ندي وقت كافي لبدء السيرفر

!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
!chmod +x /content/cloudflared

!/content/cloudflared tunnel --url http://127.0.0.1:8188 --no-autoupdate

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ComfyUI/models/text_encoders
!wget https://huggingface.co/city96/umt5-xxl-encoder-gguf/resolve/main/umt5-xxl-encoder-Q3_K_S.gguf











# Commented out IPython magic to ensure Python compatibility.
# %cd /content/ComfyUI

import subprocess, threading, time, sys

def run_comfy():
    cmd = ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    p = subprocess.Popen(cmd, cwd="/content/ComfyUI", stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)
    for line in p.stdout:
        sys.stdout.write(line)

threading.Thread(target=run_comfy, daemon=True).start()
time.sleep(8)  # ندي وقت كافي لبدء السيرفر

!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
!chmod +x /content/cloudflared

!/content/cloudflared tunnel --url http://127.0.0.1:8188 --no-autoupdate